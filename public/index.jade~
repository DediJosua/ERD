doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title ERD 

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-tomorrow.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    // endbuild

  body

    article

      section
        h1 Bank Suebbbb

      section
        h2 ERD
        hr
        ul
          li Ilhamdi
          li Dedi Josua Situmorang
          li Markus Apriadi Sitohang
          li Lamhot Nababan

      section
        h2 Sejarah ERD
      section
        p Model Entity Relationship diperkenalkan pertama kali oleh P.P. Chen  pada tahun 1976. ERD ini dirancang untuk menggambarkan persepsi dari pemakai  dan berisi obyek-obyek dasar yang disebut entity dan hubungan antar entity-entity tersebut yang disebut relationship
      section
        h2 Atribut ERD
        h3 Atribut memberikan informasi lebih rinci tentang jenis entitas. Atribut memiliki struktur internal berupa tipe data<BR>Jenis-jenis atribut:
        ul
          li Atribut Key
          li Atribut simple
          li Atribut Multivalueli
          li Atribut Composite
          li Atribut Atribut Derivatif


      section
        h2 Elemen / Relasi ERD
        1.  Entitas dan Atribut
			- Entitas adalah tempat penyimpan data, maka entitas yang digambarkan  dalam ERD ini merupakan data store yang ada di DFD dan akan menjadi file data di komputer
			- Entitas adalah suatu objek dan memiliki nama. Secara sederhana dapat dikatakan bahwa jika objek ini tidak ada di suatu enterprise 			(lingkungan tertentu), maka enterprise tersebut tidak dapat berjalan normal.
			- Contoh, entitas ‘MAHASISWA’ harus ada di lingkungan perguruan tinggi, begitu juga dengan entitas ‘DOSEN’, ‘MT_KULIAH’, dan sebagainya
			- Di dalam entitas ‘MAHASISWA’ berisi elemen-elemen data (biodata mahasiswa) yang terdiri atas NPM, NAMA, KELAS, ALAMAT, dan sebagainya. NPM, NAMA, KELAS, dan ALAMAT disebut dengan atribut (field)
			- Gambar memperlihatkan bahwa atribut-atribut NPM, NAMA, ALAMAT, dan TGL_LAHIR harus ada di dalam biodata seorang mahasiswa.
			- Atribut-atribut TINGGI_BADAN, dan WARNA_RAMBUT adalah atribut-atribut yang boleh tidak ada di dalam biodata mahasiswa (karena tidak penting).
			- Sedangkan atribut NAMA_DOSEN adalah atribut yang tidak boleh ada di entitas mahasiswa
			- Pada akhirnya, entitas ini akan menjadi file data (yang bersifat master file) di dalam komputer. Master file adalah file utama (yang harus ada, dan sifatnya jarang berubah)
		2. Relasi
			- Relasi adalah penghubung antara satu entitas (master file) dengan entitas lain di dalam sebuah sistem komputer. Pada akhirnya, relasi akan menjadi file transaksi (transaction file) di komputer
			- Secara kalimat logis, contoh relasi yang terjadi di sebuah perpustakaan adalah : “Anggota meminjam buku,” atau “Anggota mengembalikan buku.” Dalam hal ini, Anggota dan Buku adalah entitas, meminjam dan mengembalikan adalah transaksi (relasi antara anggota dan buku).
			
      section
	  
        h2 Bullet List
        h3.bullet Powered by <a href="https://github.com/markdalgleish/bespoke-bullets">bespoke-bullets</a>
        ul
          li Bullet 1
          li Bullet 2
          li Bullet 3

      section
        h2 Syntax Highlighting
        h3 Powered by <a href="http://twitter.com/LeaVerou">Lea Verou</a>'s <a href="https://github.com/LeaVerou/prism">Prism</a>
        hr
        pre
          code.language-javascript.
            bespoke.from('article', {
              keys: true,
              touch: true,
              hash: true,
              state: true,
              bullets: 'li, .bullet'
            });

      section(data-bespoke-hash='named-route')
        h2 Named Route
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-hash">bespoke-hash</a>
        p Look up! This route has been named with a <em>'data-bespoke-hash'</em> attribute.

      section(data-bespoke-state='emphatic')
        h2 Emphatic Slide!
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-state">bespoke-state</a>

      section
        h2.bullet Just the beginning...
        hr
        ul
          li Edit <a href="http://jade-lang.com/">Jade</a> markup in <em>'src/index.jade'</em>
          li Edit <a href="http://learnboost.github.io/stylus/">Stylus</a> styles in <em>'src/styles/main.styl'</em>
          li Edit JavaScript in <em>'src/scripts/main.js'</em>
        hr
        ul
          li
            strong Enjoy! :)
            a(href='http://twitter.com/markdalgleish')  -@markdalgleish

    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/bespoke-forms/dist/bespoke-forms.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild